[gd_scene load_steps=5 format=3 uid="uid://1aiis43t6anv"]

[ext_resource type="PackedScene" uid="uid://b4gbywbosltb" path="res://scenes/sapo.tscn" id="1_8dnef"]
[ext_resource type="PackedScene" uid="uid://buyc5rktwafcy" path="res://scenes/bolas.tscn" id="2_ugoy3"]

[sub_resource type="GDScript" id="GDScript_ugoy3"]
script/source = "extends Node2D

@export var bolas_scene: PackedScene
@onready var path = $Path2D
@onready var timer = $Timer
@onready var label_equacao = $CanvasLayer/Label

var resultado_atual:int
var bolas_em_campo = []
var spawn_delay = 2.0

func _ready():
	randomize()
	timer.wait_time = spawn_delay
	timer.start()
	# Gera a primeira equa√ß√£o
	gerar_equacao_baseada_em_bolas()

func _process(delta):
	# Ajusta a frequ√™ncia de spawn
	var bolas_count = get_tree().get_nodes_in_group(\"bolas\").size()
	var novo_delay = 2.0
	if bolas_count < 3:
		novo_delay = 1.0
	
	if timer.wait_time != novo_delay:
		timer.wait_time = novo_delay
		timer.start()
	
	# Se n√£o tem equa√ß√£o ou ela n√£o faz sentido, gera outra
	if resultado_atual == 0 or not valor_existe_em_bolas(resultado_atual):
		gerar_equacao_baseada_em_bolas()

func spawn_bola_aleatoria():
	var valor = randi_range(1, 10)
	
	# Criar um PathFollow2D s√≥ pra essa bola
	var pathfollow = PathFollow2D.new()
	path.add_child(pathfollow)
	pathfollow.progress = 0.0
	
	# Instanciar a bola
	var bola = bolas_scene.instantiate()
	bola.setup(pathfollow, valor, randf_range(60, 100))
	bola.connect(\"ball_destroyed\", Callable(self, \"_on_bola_destroyed\"))
	pathfollow.add_child(bola)
	
	bolas_em_campo.append(valor)
	print(\"üé± Bola spawnada:\", valor, \"| Total bolas:\", get_tree().get_nodes_in_group(\"bolas\").size())

func gerar_equacao_baseada_em_bolas():
	var valores_bolas = get_valores_bolas_em_campo()
	
	if valores_bolas.size() == 0:
		label_equacao.text = \"Aguardando bolas...\"
		return
	
	var valor_alvo = valores_bolas.pick_random()
	resultado_atual = valor_alvo
	print(valor_alvo)
	
	var a = 0
	var b = 0
	var operacao = \"\"
	
	if randf() > 0.5:
		a = randi_range(1, max(1, valor_alvo - 1))
		b = valor_alvo - a
		operacao = \"+\"
	else:
		b = randi_range(1, 10)
		a = valor_alvo + b
		operacao = \"-\"
	
	label_equacao.text = str(a, \" \", operacao, \" \", b, \" = ?\")
	print(\"üìê Equa√ß√£o:\", a, operacao, b, \"=\", valor_alvo)

func get_valores_bolas_em_campo() -> Array:
	var valores = []
	for node in get_tree().get_nodes_in_group(\"bolas\"):
		if node is MathBall and is_instance_valid(node):
			valores.append(node.ball_value)
	return valores

func valor_existe_em_bolas(valor: int) -> bool:
	for node in get_tree().get_nodes_in_group(\"bolas\"):
		if node is MathBall and is_instance_valid(node) and node.ball_value == valor:
			return true
	return false

func _on_timer_timeout():
	spawn_bola_aleatoria()

func _on_bola_destroyed(value:int):
	var index = bolas_em_campo.find(value)
	if index != -1:
		bolas_em_campo.remove_at(index)
	
	print(\"üí• Bola destru√≠da:\", value, \"| Restantes:\", get_tree().get_nodes_in_group(\"bolas\").size())
	
	if value == resultado_atual:
		print(\"‚úÖ Acertou! Valor:\", value)
		gerar_equacao_baseada_em_bolas()
	else:
		print(\"‚ùå Errou! Valor:\", value, \"| Esperado:\", resultado_atual)
"

[sub_resource type="Curve2D" id="Curve2D_8dnef"]
_data = {
"points": PackedVector2Array(0, 0, 0, 0, -138, 145, 0, 0, 0, 0, -40, 112, -25.7231, 2.14359, 25.7231, -2.14359, 85, 93, 0, 0, 0, 0, 222, 82, 38.5846, 2.14359, -38.5846, -2.14359, 387, 91, 0, 0, 0, 0, 605, 91, -75.0257, -17.1487, 75.0257, 17.1487, 933, 110, -66.4513, -10.718, 66.4513, 10.718, 1158, 108, 0, 0, 0, 0, 1343, 136, 0, 0, 0, 0, 1660, 179, 0, 0, 0, 0, 1879, 228, 0, 0, 0, 0, 1967, 436, 0, 0, 0, 0, 2072, 638, 0, 0, 0, 0, 2076, 846, 0, 0, 0, 0, 2027, 1006, 0, 0, 0, 0, 1840, 1094, 0, 0, 0, 0, 1564, 1150, 0, 0, 0, 0, 1227, 1193, 0, 0, 0, 0, 830, 1165, 0, 0, 0, 0, 481, 1105, 0, 0, 0, 0, 335, 968, 0, 0, 0, 0, 352, 786, 0, 0, 0, 0, 464, 635, 0, 0, 0, 0, 685, 623, 0, 0, 0, 0, 880, 627, 0, 0, 0, 0, 989, 642)
}
point_count = 26

[node name="Fase 1" type="Node2D"]
script = SubResource("GDScript_ugoy3")
bolas_scene = ExtResource("2_ugoy3")

[node name="Camera2D" type="Camera2D" parent="."]
anchor_mode = 0
zoom = Vector2(0.5, 0.5)
limit_right = 1000000000

[node name="Sapo" parent="." instance=ExtResource("1_8dnef")]
position = Vector2(1148, 647)

[node name="Path2D" type="Path2D" parent="."]
position = Vector2(-12, -2)
curve = SubResource("Curve2D_8dnef")

[node name="Timer" type="Timer" parent="."]
autostart = true

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Label" type="Label" parent="CanvasLayer"]
offset_right = 133.0
offset_bottom = 50.0
